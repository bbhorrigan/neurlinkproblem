function compressData(electrodeData):
    # Step 1: Delta Encoding
    deltaEncodedData = deltaEncode(electrodeData)
    
    # Step 2: Quantization
    quantizedData = quantize(deltaEncodedData, quantizationLevel)
    
    # Step 3: Huffman Coding
    compressedData = huffmanEncode(quantizedData)
    
    return compressedData

function deltaEncode(data):
    deltaEncoded = []
    for i in range(1, len(data)):
        deltaEncoded.append(data[i] - data[i-1])
    return deltaEncoded

function quantize(data, level):
    quantized = []
    for value in data:
        quantized.append(round(value / level) * level)
    return quantized

function huffmanEncode(data):
    # Build frequency table
    frequency = calculateFrequency(data)
    # Build Huffman Tree
    huffmanTree = buildHuffmanTree(frequency)
    # Encode data
    encodedData = encodeWithHuffmanTree(data, huffmanTree)
    return encodedData
